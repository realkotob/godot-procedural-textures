[gd_resource type="ShaderMaterial" load_steps=2 format=3 uid="uid://cjnuf88jrvrjl"]

[sub_resource type="Shader" id="1"]
code = "shader_type canvas_item;

uniform sampler2D input_tex;
uniform sampler2D seams_tex;
uniform float     seams_multiplier = 256.0;
uniform float texture_size;
uniform float mm_chunk_size = 1.0;
uniform vec2 mm_chunk_offset = vec2(0.0);

vec2 seams_uv(vec2 uv) {
	vec2 seams_value = texture(seams_tex, uv).xy-vec2(0.5);
	return fract(uv+seams_value*seams_multiplier/texture_size);
}

void fragment() {
	COLOR = texture(input_tex, seams_uv(mm_chunk_offset+mm_chunk_size*UV));
}
"

[resource]
shader = SubResource("1")
shader_parameter/seams_multiplier = 256.0
shader_parameter/texture_size = null
shader_parameter/mm_chunk_size = 1.0
shader_parameter/mm_chunk_offset = Vector2(0, 0)
